// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = false
  modelCase             = "PascalCase"
  modelSuffix           = "ZodModel"
  useDecimalJs          = false
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map("users")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  products  Product[]

  @@map("categories")
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       Decimal     @db.Decimal(10, 2)
  description String
  banner      String
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @updatedAt
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String?
  items       OrderItem[]

  @@map("products")
}

model Order {
  id        String      @id @default(uuid())
  table     Int
  status    Boolean     @default(false)
  draft     Boolean     @default(true)
  name      String?
  createdAt DateTime?   @default(now())
  updatedAt DateTime?   @updatedAt
  items     OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String    @id @default(uuid())
  amount    Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  orderId   String?
  productId String?
  order     Order?    @relation(fields: [orderId], references: [id])
  product   Product?  @relation(fields: [productId], references: [id])

  @@map("order_items")
}
